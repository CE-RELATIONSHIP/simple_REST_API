services:
  db-dev:
    build:
      context: db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: db-dev
      MYSQL_USER: webapp
      MYSQL_PASSWORD: secure-password
    volumes:
      - ./db/dev:/var/lib/mysql:z
      - ./init_scripts_sql:/docker-entrypoint-initdb.d/:ro
    ports:
      -  "32000:3306"
    networks:
      - dev-environment
    restart: unless-stopped
  
  api-dev:
    build:
      context: app
      dockerfile: Dockerfile
    environment:
      MYSQL_DATABASE: db-dev
      MYSQL_USER: webapp
      MYSQL_PASSWORD: secure-password
      HOST: db-dev
    ports:
      - "80:5000"
    networks:
      - dev-environment
    restart: unless-stopped
  
  db-test:
    build:
      context: db
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: db-test
      MYSQL_USER: webapp
      MYSQL_PASSWORD: secure-password
    volumes:
      - ./db/test:/var/lib/mysql:z
      - ./init_scripts_sql:/docker-entrypoint-initdb.d/:ro
    ports:
      -  "32001:3306"
    networks:
      - test-environment
    restart: unless-stopped
  
  api-test:
    build:
      context: app
      dockerfile: Dockerfile
    environment:
      MYSQL_DATABASE: db-test
      MYSQL_USER: webapp
      MYSQL_PASSWORD: secure-password
      HOST: db-test
    ports:
      - "81:5000"
    networks:
      - test-environment
    restart: unless-stopped

  phpmyadmin:
    image: docker.io/library/phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - test-environment
      - dev-environment
  
networks:
  test-environment:
    name: 'test-environment'
  dev-environment:
    name: 'dev-environment'